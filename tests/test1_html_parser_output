CURR_LINE:  <query goal="sibling ( mary, X ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 []
OUTPUT_STACK:
 {}
CURR_LINE:  <forloop index="0" rule="sibling ( X, Y )  :- parent_child ( Z, X ) , parent_child ( Z, Y ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 ['0']
OUTPUT_STACK:
 {}
CURR_LINE:  <matching_head matchinghead="{X: mary, Y: X}">
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 ['0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}}
CURR_LINE:  </matching_head>
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 ['0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}}
CURR_LINE:  <query goal="parent_child ( Z, mary ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}}
CURR_LINE:  <forloop index="0" rule="sibling ( X, Y )  :- parent_child ( Z, X ) , parent_child ( Z, Y ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0', '0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}}
CURR_LINE:  <forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}}
CURR_LINE:  <matching_head matchinghead="{Z: tom_smith}">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}}
CURR_LINE:  </matching_head>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}}
CURR_LINE:  <yield output="parent_child ( tom_smith, mary ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}}
CURR_LINE:  </yield>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}}
CURR_LINE:  <query goal="parent_child ( tom_smith, X ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}}
CURR_LINE:  <forloop index="0" rule="sibling ( X, Y )  :- parent_child ( Z, X ) , parent_child ( Z, Y ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}}
CURR_LINE:  <forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}}
CURR_LINE:  <matching_head matchinghead="{X: mary}">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}}
CURR_LINE:  </matching_head>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}}
CURR_LINE:  <yield output="parent_child ( tom_smith, mary ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}}
CURR_LINE:  </yield>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}}
CURR_LINE:  <yield output="sibling ( mary, mary ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}}
CURR_LINE:  </yield>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}}
CURR_LINE:  <forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}}
CURR_LINE:  <matching_head matchinghead="{X: jack}">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </matching_head>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  <yield output="parent_child ( tom_smith, jack ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </yield>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  <yield output="sibling ( mary, jack ) ">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </yield>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1', '2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">', 'goal="parent_child ( tom_smith, X ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </query>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0', '1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  <forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0', '2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">', 'goal="parent_child ( Z, mary ) ">']
OR_STACK:
 ['0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </query>
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 ['0']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 []
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  <forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 ['1']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 []
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  <forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 ['2']
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </forloop>
AND_STACK:
 ['goal="sibling ( mary, X ) ">']
OR_STACK:
 []
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
CURR_LINE:  </query>
AND_STACK:
 []
OR_STACK:
 []
OUTPUT_STACK:
 {'0': {'X': 'mary', 'Y': 'X'}, '0-1': {'Z': 'tom_smith'}, '0-1-1': {'X': 'mary'}, '0-1-2': {'X': 'jack'}}
