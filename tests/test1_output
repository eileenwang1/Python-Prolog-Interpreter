query:  sibling ( mary, A ) 
query.arguments:  [mary, A]
<query goal="sibling ( mary, A ) ">
<forloop index="0" rule="sibling ( X, Y )  :- parent_child ( Z, X ) , parent_child ( Z, Y ) ">
<matching_head matchinghead="{X: mary, Y: A}"> 
</matching_head>
<query goal="parent_child ( Z, mary ) ">
<forloop index="0" rule="sibling ( X, Y )  :- parent_child ( Z, X ) , parent_child ( Z, Y ) ">
</forloop>
<forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
<matching_head matchinghead="{Z: tom_smith}"> 
</matching_head>
<yield output="parent_child ( tom_smith, mary ) ">
</yield>
<query goal="parent_child ( tom_smith, A ) ">
<forloop index="0" rule="sibling ( X, Y )  :- parent_child ( Z, X ) , parent_child ( Z, Y ) ">
</forloop>
<forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
<matching_head matchinghead="{A: mary}"> 
</matching_head>
<yield output="parent_child ( tom_smith, mary ) ">
</yield>
<yield output="sibling ( mary, mary ) ">
</yield>
</forloop>
<forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
<matching_head matchinghead="{A: jack}"> 
</matching_head>
<yield output="parent_child ( tom_smith, jack ) ">
</yield>
<yield output="sibling ( mary, jack ) ">
</yield>
</forloop>
</query>
</forloop>
<forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
</forloop>
</query>
</forloop>
<forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
</forloop>
<forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
</forloop>
</query>
matching_query_term:  sibling ( mary, mary ) 
solutions_map:  defaultdict(<class 'list'>, {'A': [mary]})
matching_query_term:  sibling ( mary, jack ) 
solutions_map:  defaultdict(<class 'list'>, {'A': [mary, jack]})
