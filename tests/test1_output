[sibling ( A, B )  :- parent_child ( C, A ) , parent_child ( C, B ) , parent_child ( tom_smith, mary )  :- TRUE, parent_child ( tom_smith, jack )  :- TRUE]
query:  sibling ( mary, X ) 
query.arguments:  [mary, X]
<query goal="sibling ( mary, X ) ">
<forloop index="0" rule="sibling ( A, B )  :- parent_child ( C, A ) , parent_child ( C, B ) ">
<matching_head matchinghead="{A: mary, B: X}"> 
</matching_head>
<query goal="parent_child ( C, mary ) ">
<forloop index="0" rule="sibling ( A, B )  :- parent_child ( C, A ) , parent_child ( C, B ) ">
</forloop>
<forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
<matching_head matchinghead="{C: tom_smith}"> 
</matching_head>
<yield output="parent_child ( tom_smith, mary ) ">
</yield>
<query goal="parent_child ( tom_smith, X ) ">
<forloop index="0" rule="sibling ( A, B )  :- parent_child ( C, A ) , parent_child ( C, B ) ">
</forloop>
<forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
<matching_head matchinghead="{X: mary}"> 
</matching_head>
<yield output="parent_child ( tom_smith, mary ) ">
</yield>
<yield output="sibling ( mary, mary ) ">
</yield>
</forloop>
<forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
<matching_head matchinghead="{X: jack}"> 
</matching_head>
<yield output="parent_child ( tom_smith, jack ) ">
</yield>
<yield output="sibling ( mary, jack ) ">
</yield>
</forloop>
</query>
</forloop>
<forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
</forloop>
</query>
</forloop>
<forloop index="1" rule="parent_child ( tom_smith, mary )  :- TRUE">
</forloop>
<forloop index="2" rule="parent_child ( tom_smith, jack )  :- TRUE">
</forloop>
</query>
matching_query_term:  sibling ( mary, mary ) 
solutions_map:  defaultdict(<class 'list'>, {'X': [mary]})
matching_query_term:  sibling ( mary, jack ) 
solutions_map:  defaultdict(<class 'list'>, {'X': [mary, jack]})
